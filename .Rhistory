all
read_csv("measles_params.csv") %>%
filter(loglik>max(loglik)-50) %>%
bind_rows(guesses) %>%
mutate(type=if_else(is.na(loglik),"guess","result")) %>%
arrange(type) -> all
pairs(~loglik+Beta+eta+rho, data=all, pch=16, cex=0.3,
col=ifelse(all$type=="guess",grey(0.5),"red"))
all %>%
filter(type=="result") %>%
filter(loglik>max(loglik)-10) %>%
ggplot(aes(x=eta,y=loglik))+
geom_point()+
labs(
x=expression("eta"),
title="poor manâ€™s profile likelihood"
)
fixed_params <- c(N=38000, mu_IR=2, mu_EI = 1/8, k=10)
fixed_params
fixed_params <- fixed_params[names(fixed_params) != "k"]
fixed_params
mifs_local %>%
traces()
mifs_local %>%
traces() %>%
melt()
mifs_local %>%
traces()
mifs_local %>%
traces() %>%
melt() %>%
ggplot(aes(x=iteration,y=value,group=L1,color=factor(L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
results
?pivot_longer
?melt
mifs_local %>%
traces() %>%
melt()
mifs_local %>%
traces() %>%
melt() %>%
ggplot(aes(x=iteration,y=value,group=L1,color=factor(L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
results %>%
mutate(iteration = row_number()) %>%
select(-loglik.se) %>%
pivot_longer(
cols = c(Beta:loglik),
names_to = "variable",
values_to = "value"
)
results %>%
mutate(iteration = row_number()) %>%
select(-loglik.se) %>%
pivot_longer(
cols = c(Beta:loglik),
names_to = "variable",
values_to = "value"
) %>%
ggplot(aes(x=iteration,y=value))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
knitr::opts_chunk$set(echo = TRUE)
library(pomp)
library(tidyverse)
set.seed(1350254336)
courseurl <- "https://kingaa.github.io/sbied/"
datafile <- "mif/Measles_Consett_1948.csv"
read_csv(paste0(courseurl,datafile)) %>%
select(week,reports=cases) %>%
filter(week<=42) -> dat
dat %>%
ggplot(aes(x=week,y=reports))+
geom_line()
sir_step <- Csnippet("
double dN_SI = rbinom(S,1-exp(-Beta*I/N*dt));
double dN_IR = rbinom(I,1-exp(-mu_IR*dt));
S -= dN_SI;
I += dN_SI - dN_IR;
H += dN_IR;
")
sir_init <- Csnippet("
S = nearbyint(eta*N);
I = 1;
H = 0;
")
dmeas <- Csnippet("
lik = dnbinom_mu(reports,k,rho*H,give_log);
")
rmeas <- Csnippet("
reports = rnbinom_mu(k,rho*H);
")
measSIR <- dat %>%
pomp(
times="week",t0=0,
rprocess=euler(sir_step,delta.t=1/7),
rinit=sir_init,
rmeasure=rmeas,
dmeasure=dmeas,
accumvars="H",
partrans=parameter_trans(
log=c("Beta"),
logit=c("rho","eta")
),
statenames=c("S","I","H"),
paramnames=c("Beta","mu_IR","eta","rho","k","N")
)
params <- c(Beta=20,mu_IR=2,rho=0.5,k=10,eta=0.1,N=38000)
y <- measSIR %>%
simulate(params=params,nsim=10,format="data.frame")
y %>%
ggplot(aes(x=week,y=reports,group=.id,color=factor(.id)))+
geom_line()+
scale_color_brewer(type="qual",palette=3)+
guides(color="none")
pf <- measSIR %>%
pfilter(Np=1000,params=params)
plot(pf)
fixed_params <- c(N=38000, mu_IR=2, k=10)
library(foreach)
library(doParallel)
registerDoParallel()
library(doRNG)
registerDoRNG(625904618)
tic <- Sys.time()
pf <- foreach(i=1:10,.combine=c) %dopar% {
library(pomp)
measSIR %>% pfilter(params=params,Np=10000)
}
L_pf <- pf %>%
logLik() %>%
logmeanexp(se=TRUE)
L_pf
toc <- Sys.time()
pf[[1]] %>% coef() %>% bind_rows() %>%
bind_cols(loglik=L_pf[1],loglik.se=L_pf[2]) %>%
write_csv("measles_params.csv")
registerDoRNG(482947940)
bake(file="local_search.rds",{
foreach(i=1:20,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
params=params,
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
)
} -> mifs_local
attr(mifs_local,"ncpu") <- getDoParWorkers()
mifs_local
}) -> mifs_local
mifs_local %>%
traces() %>%
melt() %>%
ggplot(aes(x=iteration,y=value,group=L1,color=factor(L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
registerDoRNG(900242057)
bake(file="lik_local.rds",{
foreach(mf=mifs_local,.combine=rbind) %dopar% {
library(pomp)
library(tidyverse)
evals <- replicate(10, logLik(pfilter(mf,Np=10000)))
ll <- logmeanexp(evals,se=TRUE)
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results
attr(results,"ncpu") <- getDoParWorkers()
results
}) -> results
t_local <- attr(results,"system.time")
ncpu_local <- attr(results,"ncpu")
pairs(~loglik+Beta+eta+rho,data=results,pch=16)
read_csv("measles_params.csv") %>%
bind_rows(results) %>%
arrange(-loglik) %>%
write_csv("measles_params.csv")
coef(measSIR)
fixed_params <- c(N=38000, mu_IR=2, k=10)
coef(measSIR, names(fixed_params)) <- fixed_params
coef(measSIR)
pf <- foreach(i=1:10,.combine=c) %dopar% {
library(pomp)
measSIR %>% pfilter(params=params,Np=10000)
}
L_pf <- pf %>%
logLik() %>%
logmeanexp(se=TRUE)
L_pf
pf[[1]] %>% coef()
pf[[1]] %>% coef() %>% bind_rows()
# This extracts the parameter values and log likelihoods and writes to file
pf[[1]] %>% coef() %>% bind_rows() %>%
bind_cols(loglik=L_pf[1],loglik.se=L_pf[2]) %>%
write_csv("measles_params.csv")
registerDoRNG(482947940)
foreach(i=1:20,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
params=params,
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
)
} -> mifs_local
attr(mifs_local,"ncpu") <- getDoParWorkers()
mifs_local
attr(mifs
registerDoRNG(482947940)
foreach(i=1:20,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
)
} -> mifs_local
params
measSIR
spy(measSIR)
params
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
# rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
)
} -> mifs_local
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
)
} -> mifs_local
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
# measSIR %>%
#   mif2(
#     Np=2000, Nmif=50,
#     cooling.fraction.50=0.5,
#     rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#     #
#     partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
#     paramnames=c("Beta","rho","eta")
#   )
coef(params)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
# measSIR %>%
#   mif2(
#     Np=2000, Nmif=50,
#     cooling.fraction.50=0.5,
#     rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#     #
#     partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
#     paramnames=c("Beta","rho","eta")
#   )
coef(params)
}
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
# measSIR %>%
#   mif2(
#     Np=2000, Nmif=50,
#     cooling.fraction.50=0.5,
#     rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#     #
#     partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
#     paramnames=c("Beta","rho","eta")
#   )
coef(params)
}
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
# measSIR %>%
#   mif2(
#     Np=2000, Nmif=50,
#     cooling.fraction.50=0.5,
#     rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#     #
#     partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
#     paramnames=c("Beta","rho","eta")
#   )
coef(params)
}
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
)
} -> mifs_local
params
coef(measSIR)
params <- c(Beta=20,mu_IR=2, rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02)),
#
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
)
} -> mifs_local
# params <- c(Beta=20,mu_IR=2, rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
cooling.fraction.50=0.5,
# params <- c(Beta=20,mu_IR=2, rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta")
cooling.fraction.50=0.5,
# params <- c(Beta=20,mu_IR=2, rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
params <- c(Beta=20,mu_IR=2, rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta", "mu_IR", "k", "N"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
params <- c(Beta=20,mu_IR=2,rho=0.5,k=10,eta=0.1,N=38000)
registerDoRNG(482947940)
foreach(i=1:2,.combine=c) %dopar% {
# Need to reload library as parallelizing
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
params = params,
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
registerDoRNG(482947940)
foreach(i=1:20,.combine=c) %dopar% {
# Need to reload library as parallelizing
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
params = params,
Np=2000, Nmif=50,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
mifs_local %>%
traces() %>%
melt() %>%
ggplot(aes(x=iteration,y=value,group=L1,color=factor(L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
registerDoRNG(482947940)
foreach(i=1:20,.combine=c) %dopar% {
# Need to reload library as parallelizing
library(pomp)
library(tidyverse)
measSIR %>%
mif2(
params = params,
Np=2000, Nmif=100,
partrans=parameter_trans(log="Beta",logit=c("rho","eta")),
paramnames=c("Beta","rho","eta"),
cooling.fraction.50=0.5,
rw.sd=rw.sd(Beta=0.02, rho=0.02, eta=ivp(0.02))
#
)
} -> mifs_local
mifs_local %>%
traces() %>%
melt() %>%
ggplot(aes(x=iteration,y=value,group=L1,color=factor(L1)))+
geom_line()+
guides(color="none")+
facet_wrap(~variable,scales="free_y")
registerDoRNG(900242057)
foreach(mf=mifs_local,.combine=rbind) %dopar% {
library(pomp)
library(tidyverse)
evals <- replicate(10, logLik(pfilter(mf,Np=10000)))
ll <- logmeanexp(evals,se=TRUE)
mf %>% coef() %>% bind_rows() %>%
bind_cols(loglik=ll[1],loglik.se=ll[2])
} -> results
pairs(~loglik+Beta+eta+rho,data=results,pch=16)
set.seed(2062379496)
runif_design(
lower=c(Beta=5,rho=0.2,eta=0),
upper=c(Beta=80,rho=0.9,eta=1),
nseq=300
) -> guesses
mf1 <- mifs_local[[1]]
results <- foreach(guess=iter(guesses,"row"), .combine=rbind) %dopar% {
library(pomp)
library(tidyverse)
mf1 %>%
mif2(params=c(unlist(guess),fixed_params)) %>%
mif2(Nmif=100) -> mf
ll <- replicate(
10,
mf %>% pfilter(Np=5000) %>% logLik()
) %>%
logmeanexp(se=TRUE)
mf %>%
coef() %>%
bind_rows() %>%
bind_cols(loglik=ll[1], loglik.se=ll[2])
}
